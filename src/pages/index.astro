---
import BaseLayout from "../layouts/BaseLayout.astro";
import BlogPost from "../components/BlogPost.astro";
const pageTitle = "";
const allPosts = await Astro.glob("./posts/*.md");

// 按发布日期排序，新的文章在前面，同一天则按权重排序
const sortedPosts = allPosts.sort((a, b) => {
  const dateA = new Date(a.frontmatter.pubDate).getTime();
  const dateB = new Date(b.frontmatter.pubDate).getTime();

  // 如果日期相同，则按权重排序（权重大的排前面）
  if (dateA === dateB) {
    // 获取权重，如果不存在则默认为0
    const weightA = a.frontmatter.weight || 0;
    const weightB = b.frontmatter.weight || 0;
    return weightB - weightA;
  }

  // 日期不同则按日期排序
  return dateB - dateA; // 降序排列，新的在前
});

// 按年份对文章进行分组
const postsByYear = {};
sortedPosts.forEach((post) => {
  const year = new Date(post.frontmatter.pubDate).getFullYear();
  const yearKey = year.toString();
  if (!postsByYear[yearKey]) {
    postsByYear[yearKey] = [];
  }
  postsByYear[yearKey].push(post);
});

// 获取年份并排序（降序）
const years = Object.keys(postsByYear)
  .map((year) => parseInt(year))
  .sort((a, b) => b - a)
  .map((year) => year.toString());
---

<BaseLayout pageTitle={pageTitle}>
  {
    years.map((year) => (
      <div class="mb-10">
        <h1 class="mb-8 text-3xl font-bold">{year}</h1>
        <div class="space-y-4">
          {postsByYear[year].map((post) => (
            <BlogPost
              url={post.url}
              title={post.frontmatter.title}
              date={post.frontmatter.pubDate}
              slug={post.frontmatter.slug}
            />
          ))}
        </div>
      </div>
    ))
  }

  <script>
    import "../scripts/menu.js";
  </script>
</BaseLayout>
